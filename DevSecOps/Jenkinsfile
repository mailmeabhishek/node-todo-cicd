pipeline {
    agent any
    environment{
        SONAR_HOME = tool "Sonar"
    }
    stages {
        
        stage("Code"){
            steps{
                git url: "https://github.com/mailmeabhishek/node-todo-cicd.git" , branch: "main"
                echo "Code Clonned Successfully"
            }
        }
        stage("SonarQube Analysis"){
            steps{
                withSonarQubeEnv("Sonar"){
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=nodetodo -Dsonar.projectKey=nodetodokey -X"
                }
            }
        }
        stage("SonarQube Quality Gates"){
            steps{
                timeout(time: 1, unit: "MINUTES"){
                    waitForQualityGate abortPipeline: false
                }
            }
        }
        stage("OWASP"){
            steps{
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'OWASP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                echo "OWASP Dependecy Check Done Successfully"
            }
        }
        stage("Build & Test"){
            steps{
                sh 'docker build -t node-app-batch-6:latest .'
                echo "Code Built and Tested Successfully"
            }
        }
        stage("Trivy"){
            steps{
                sh "trivy image node-app-batch-6"
                echo "Trivy Scanned the Image Successfully"
            }
        }
        stage("Push to Private Docker Hub Repo"){
            steps{
                echo "Pushed to Docker Hub Repo Successfully"
            }
        }
        stage("Deploy"){
            steps{
                echo "App Deployed Successfully"
            }
        }
    }
}
